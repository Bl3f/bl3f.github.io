{"type":"data","nodes":[{"type":"data","data":[{"routeHash":1,"paramsHash":2,"customFormattingSettings":3,"isUserPage":6,"evidencemeta":7},"bf1399820dde3dd110e03ace4147ff86","d41d8cd98f00b204e9800998ecf8427e",{"version":4,"customFormats":5},"1.0",[],true,{"queries":8},[9,13,17,21,25],{"id":10,"compiledQueryString":11,"inputQueryString":12,"compiled":6,"inline":6},"distinct_tools","SELECT COUNT(DISTINCT tool) AS total\nFROM (SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}')","SELECT COUNT(DISTINCT tool) AS total\nFROM ${filtered}",{"id":14,"compiledQueryString":15,"inputQueryString":16,"compiled":6,"inline":6},"filtered","SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}'","SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM ${obt}\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}'",{"id":18,"compiledQueryString":19,"inputQueryString":19,"compiled":20,"inline":6},"obt","WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data",false,{"id":22,"compiledQueryString":23,"inputQueryString":24,"compiled":6,"inline":6},"channels","SELECT\n    distinct channel\nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)","SELECT\n    distinct channel\nFROM ${obt}",{"id":26,"compiledQueryString":27,"inputQueryString":28,"compiled":6,"inline":6},"years","SELECT\n    distinct year\nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)","SELECT\n    distinct year\nFROM ${obt}"],"uses":{"route":1},"slash":"always"},null]}
