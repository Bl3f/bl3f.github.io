{"__page":{"path":"/","queries":[],"content":"# Welcome to the Evidence Development Workspace!\n\nThis workspace contains examples of all Evidence features.\n\nIf you are developing a new feature, add a page to this project. The page will be used as a reference for the feature, as a sandbox for anyone making changes to the feature in the future, and for general product testing.\n\nIf you notice a feature is missing from this project, please:\n\n- add a page or\n- create an issue on Github.\n\nThanks!\n"},"tools":{"__page":{"path":"/tools","frontMatter":{"title":"MDN tools stats"},"queries":[{"id":"distinct_tools","compiledQueryString":"SELECT COUNT(DISTINCT tool) AS total\nFROM (SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}')","inputQueryString":"SELECT COUNT(DISTINCT tool) AS total\nFROM ${filtered}","compiled":true,"inline":true},{"id":"filtered","compiledQueryString":"SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}'","inputQueryString":"SELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM ${obt}\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}'","compiled":true,"inline":true},{"id":"obt","compiledQueryString":"WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data","inputQueryString":"WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data","compiled":false,"inline":true},{"id":"channels","compiledQueryString":"SELECT\n    distinct channel\nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)","inputQueryString":"SELECT\n    distinct channel\nFROM ${obt}","compiled":true,"inline":true},{"id":"years","compiledQueryString":"SELECT\n    distinct year\nFROM (WITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data)","inputQueryString":"SELECT\n    distinct year\nFROM ${obt}","compiled":true,"inline":true}],"content":"---\ntitle: MDN tools stats\n---\n\n### Filters\n\n<Dropdown\n    data={channels} \n    name=channel\n    value=channel\n    order=channel\n    defaultValue=all\n/>\n\n<Dropdown\n    data={years} \n    name=year\n    value=year\n    order=year\n    defaultValue=all\n/>\n\n<br />\n\n<BigValue \n  data={distinct_tools}\n  value=total\n  title=\"Number of distinct tools\"\n/>\n\n<BarChart \n    data={filtered} \n    x=tool \n    y=total\n    swapXY=true \n/>\n\n{#if inputs.year != 'all'}\n<BarChart \n    data={filtered} \n    x=tool \n    y=perc\n    swapXY=true \n/>\n{/if}\n\n```sql distinct_tools\nSELECT COUNT(DISTINCT tool) AS total\nFROM ${filtered}\n```\n\n```sql filtered\nSELECT\n    *,\n    (total - previous_total) / previous_total * 100 AS perc \nFROM ${obt}\nWHERE \n    channel like '${inputs.channel}'\n    AND year like '${inputs.year}'\n```\n\n```sql obt\nWITH clean AS (\n    SELECT\n        name AS channel,\n        CAST(CAST(y AS INTEGER) AS STRING) AS year,\n        item AS tool,\n        total,\n    FROM tools\n),\n\nall_channels AS (\n    SELECT\n        'all' AS channel,\n        year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years AS (\n    SELECT\n        channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_years_channels AS (\n    SELECT\n        'all' AS channel,\n        'all' AS year,\n        tool,\n        SUM(total) AS total\n    FROM clean\n    GROUP BY 1, 2, 3\n),\n\nall_data AS (\n    SELECT * FROM clean UNION ALL\n    SELECT * FROM all_channels UNION ALL\n    SELECT * FROM all_years UNION ALL\n    SELECT * FROM all_years_channels\n)\n\nSELECT\n    tool,\n    channel,\n    year,\n    total,\n    IF(year != 'all', LAG(total) OVER (PARTITION BY tool, channel ORDER BY year ASC), null) AS previous_total\nFROM all_data\n```\n\n```sql channels\nSELECT\n    distinct channel\nFROM ${obt}\n```\n\n```sql years\nSELECT\n    distinct year\nFROM ${obt}\n```"}}}